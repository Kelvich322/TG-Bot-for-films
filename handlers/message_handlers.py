from keyboards.InlineKeyboards.InlineKeyboards import return_in_menu_markup
from keyboards.ReplyKeyboards.ReplyKeyboards import keyboard_to_start, remove_markup
from models.viewed import get_viewed_materials
from states.states import MainStates, FilmStates
from utils.kpoisk_films import genre_and_year_select, get_random_film


def menu(bot, message):
    bot.send_message(
        message.chat.id,
        f"–í—ã–±–µ—Ä–∏ –Ω—É–∂–Ω—É—é –∫–Ω–æ–ø–∫—É –Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ —Å–Ω–∏–∑—É ‚¨áÔ∏è",
        reply_markup=keyboard_to_start(),
    )
    bot.set_state(message.from_user.id, MainStates.menu.name, message.chat.id)
    print(
        f"–¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ: {bot.get_state(message.from_user.id, message.chat.id)}. –û–∂–∏–¥–∞–µ—Ç—Å—è: {MainStates.menu}"
    )


def viewed_materials(bot, message):
    print(
        f"–¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ: {bot.get_state(message.from_user.id, message.chat.id)}. –û–∂–∏–¥–∞–µ—Ç—Å—è: {MainStates.menu}"
    )
    if not (
        bot.get_state(message.from_user.id, message.chat.id) == MainStates.menu.name
    ) or (
        bot.get_state(message.from_user.id, message.chat.id)
        == MainStates.viewed_materials.name
    ):
        print("–§—É–Ω–∫—Ü–∏—è –Ω–µ –ø—Ä–æ—à–ª–∞ –ø—Ä–æ–≤–µ—Ä–∫—É")
        return

    bot.set_state(
        message.from_user.id, MainStates.viewed_materials.name, message.chat.id
    )

    bot.send_message(
        message.chat.id,
        "–í–æ—Ç —Ñ–∏–ª—å–º—ã, –∫–æ—Ç–æ—Ä—ã–µ –≤—ã —Å–º–æ—Ç—Ä–µ–ª–∏:",
        reply_markup=remove_markup(),
    )

    materials = get_viewed_materials(message.from_user.username)
    stroke = ""

    for i, material in enumerate(materials):
        formatted_date = material.date.strftime("%d.%m.%Y")
        stroke += (
            f"{i + 1}. "
            f"–ù–∞–∑–≤–∞–Ω–∏–µ: {material.material_name} | "
            f"<a href='{material.material_url}'>–°—Å—ã–ª–∫–∞</a> | "
            f"–î–∞—Ç–∞: {formatted_date}\n\n"
        )

    bot.send_message(
        message.chat.id, stroke, reply_markup=return_in_menu_markup(), parse_mode="HTML"
    )


def random_film(bot, message):
    print(
        f"–¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ: {bot.get_state(message.from_user.id, message.chat.id)}. –û–∂–∏–¥–∞–µ—Ç—Å—è: {MainStates.menu}"
    )
    if not (
        bot.get_state(message.from_user.id, message.chat.id) == MainStates.menu.name
    ) or (
        bot.get_state(message.from_user.id, message.chat.id)
        == FilmStates.random_film.name
    ):
        print("–§—É–Ω–∫—Ü–∏—è –Ω–µ –ø—Ä–æ—à–ª–∞ –ø—Ä–æ–≤–µ—Ä–∫—É")
        return

    bot.set_state(message.from_user.id, FilmStates.random_film.name, message.chat.id)
    bot.send_message(
        message.chat.id,
        f"–í—ã–±–∏—Ä–∞—é –¥–ª—è –≤–∞—Å —Å–ª—É—á–∞–π–Ω—ã–π —Ñ–∏–ª—å–º –∏–∑ –ª—É—á—à–∏—Ö —Ñ–∏–ª—å–º–æ–≤ –ö–∏–Ω–æ–ø–æ–∏—Å–∫–∞ üîú",
        reply_markup=remove_markup(),
    )
    get_random_film(bot, message)


def register_message_handlers(bot):
    @bot.message_handler(func=lambda message: message.text == "–í—ã–±—Ä–∞—Ç—å —Ñ–∏–ª—å–º")
    def handle_film_selection(message):
        genre_and_year_select(bot, message)

    @bot.message_handler(func=lambda message: message.text == "–ò—Å—Ç–æ—Ä–∏—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞")
    def viewed_mats(message):
        viewed_materials(bot, message)

    @bot.message_handler(func=lambda message: message.text == "–í—ã–±—Ä–∞—Ç—å —Å–ª—É—á–∞–π–Ω—ã–π —Ñ–∏–ª—å–º")
    def random_film_handler(message):
        random_film(bot, message)
